version: '3.3'

services:
  fireflyiii:
    image: jc5x/firefly-iii:${DOCKER_TAG}
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    depends_on:
      - fireflyiiidb
    networks:
      - proxy
      - internal
    labels:
      - "traefik.http.routers.fireflyiii.entrypoints=web,websecure"
      - 'traefik.http.routers.fireflyiii.rule=Host(`${FRONTEND_RULE}`)'
      - "traefik.http.services.fireflyiii.loadbalancer.server.port=8080"
      - "traefik.http.services.fireflyiii.loadbalancer.passHostHeader=true"
        # Create a middleware named `fireflyHeaders`
      - "traefik.http.middlewares.fireflyHeaders.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.fireflyHeaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.fireflyHeaders.headers.stsPreload=true"
      - "traefik.http.middlewares.fireflyHeaders.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.fireflyHeaders.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.fireflyHeaders.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.fireflyHeaders.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.fireflyHeaders.headers.customResponseHeaders=Referrer-Policy:origin"
        # Apply the middleware named `fireflyHeaders` to the router named `fireflyiii`
      - "traefik.http.routers.fireflyiii.middlewares=fireflyHeaders@docker"
      - 'traefik.enable=true'
    restart: always
  fireflyiiidb:
    image: mariadb:10
    networks:
      - internal
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - firefly_iii_db:/var/lib/mysql
#  firefly-bot:
#    image: vjfalk1/firefly-telegram-bot:latest
#    environment:
#      - TELEGRAM_BOT_TOKEN=xxxxxx
#    volumes:
#      - ../telegram_bot/config:/config
#    networks:
#      - proxy
#      - internal
#    labels:
#      - "traefik.http.routers.fireflybot.entrypoints=web,websecure"
#      - 'traefik.http.routers.fireflybot.rule=Host(`${TRAEFIK_FRONTEND_RULE}`) && (PathPrefix(`/api`) || PathPrefix(`/telegram`))'
#      - "traefik.http.services.fireflybot.loadbalancer.server.port=8080"
#      - 'traefik.enable=true'

volumes:
  firefly_iii_upload:
  firefly_iii_db:

networks:
  proxy:
    external:
      name: ${PROXY_NAME}
  internal:
    driver: bridge
